{"version":3,"sources":["component/Header.js","component/List.js","component/UpdateList.js","component/ToDo.js","component/Main.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","List","props","text","elem","index","done","changeDone","bind","this","className","data-target","id","class","title","value","type","onChange","style","userSelect","marginLeft","marginRight","children","UpdateList","save","remove","change","length","onClick","ToDo","state","array","isOpenField","oldTarget","undefined","newTarget","setState","filter","el","event","target","newObject","Math","max","apply","map","arr","unshift","closest","document","querySelector","dataset","split","changeArray","i1","i2","idx","splice","onMouseDown","onMouseUp","e","add","key","delete","update","React","Component","Main","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.926d2668.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header(){\r\n    return (\r\n        <header></header>\r\n    )\r\n}","import React from 'react'\r\nimport './../style/list.css'\r\n\r\nexport default function List (props) {\r\n    const text = props.elem.text;\r\n    const index = props.index;\r\n    const done = props.elem.done;\r\n    const changeDone = props.changeDone.bind(this);\r\n    const firstSpanStyle = {\r\n        userSelect:'none',\r\n        marginLeft:'5px',\r\n        marginRight:'5px',\r\n    }\r\n\r\n    return (\r\n        <div className={`list list-${done}`} data-target={`target-list-${props.elem.id}`}>\r\n            <div class=\"list-draggind\" title=\"Для перетаскивания\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n            <div className={`isChecking-${done}`} title=\"Отметить как завершенное\">\r\n                <input value={done} type=\"checkbox\" onChange={changeDone} />\r\n                <span className=\"isChecking__span\"></span>\r\n                <span className=\"isChecking__span\"></span>\r\n                <span className=\"isChecking__span\"></span>\r\n            </div>\r\n            <span style={firstSpanStyle}>{index}</span>\r\n            <span className=\"list__text\">{text}</span>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function UpdateList (props) {\r\n    const value = props.value\r\n    const save = props.save.bind(this);\r\n    const remove = props.remove.bind(this);\r\n    const change = props.change.bind(this);\r\n\r\n    return (\r\n        <div className=\"change__content\">\r\n            <div className=\"change__content-container\">\r\n                <textarea value={value} onChange={change}></textarea>\r\n                <div className=\"change__content-container__btns\">\r\n                    <button className={`btn btn__save ${value.length == 0 ? 'btn__disabled' : ''}`} onClick={save}>Сохранить</button>\r\n                    <button className=\"btn btn__remove\" onClick={remove}>Отменить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport List from './List'\r\nimport UpdateList from './UpdateList'\r\n\r\nexport default class ToDo extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            array: [\r\n                {\r\n                    id:1,\r\n                    text:'Create simple To-Do-List',\r\n                    isOpenField:false,\r\n                    done:false\r\n                },\r\n                {\r\n                    id:2,\r\n                    text:'Hello, this is task in To-DO',\r\n                    isOpenField:false,\r\n                    done:false\r\n                },\r\n                {\r\n                    id:4,\r\n                    text:'Hello, this is task in To-DO',\r\n                    isOpenField:false,\r\n                    done:false\r\n                },\r\n                {\r\n                    id:5,\r\n                    text:'Hello, this is task in To-DO',\r\n                    isOpenField:false,\r\n                    done:false\r\n                },\r\n            ],\r\n            value:''\r\n        };\r\n        this.oldTarget = undefined;\r\n        this.newTarget = undefined;\r\n    \r\n    }\r\n    delete(id){\r\n        this.setState((state)=>{\r\n          return  {\r\n              array: state.array.filter(el=> el.id !== id)\r\n            }\r\n        })\r\n    }\r\n    update(id){\r\n        this.setState((state)=>{\r\n            return  {\r\n                array: state.array.filter(el=> {\r\n                    if(el.id === id){\r\n                        el.isOpenField = true\r\n                        return el\r\n                    }else return el\r\n                }),\r\n                value: state.array.filter(el=> el.id === id)[0].text,\r\n              }\r\n          })\r\n    }\r\n    save(id){\r\n        if(this.state.value.length){\r\n        \r\n        this.setState((state)=>{\r\n            return  {\r\n                array: state.array.filter(el=> {\r\n                    if(el.id === id){\r\n                        el.text = state.value\r\n                        el.isOpenField = false\r\n\r\n                    }\r\n                    return el\r\n                }),\r\n                value:''\r\n              }\r\n          })\r\n        }\r\n    }\r\n    remove(id){\r\n        this.setState((state)=>{\r\n            return  {\r\n                array: state.array.filter(el=> {\r\n                    if(el.id === id){\r\n                        el.isOpenField = false\r\n\r\n                    }\r\n                    return el\r\n                }),\r\n                value:''\r\n              }\r\n          })\r\n    }\r\n    change(event){\r\n        this.setState({value: event.target.value});\r\n    }\r\n    add(){\r\n        if(this.state.value.length){\r\n            const newObject = {\r\n                id:Math.max.apply(null,this.state.array.map(el=> el.id))+1,\r\n                text:this.state.value,\r\n                isOpenField:false,\r\n                done:false\r\n            }\r\n            const arr = this.state.array\r\n            arr.unshift(newObject)\r\n            this.setState( {\r\n                    array: arr,\r\n                    value:''\r\n            })\r\n        }\r\n    }\r\n    changeDone(id){\r\n        this.setState({\r\n            array: this.state.array.filter(el => {\r\n                \r\n                    if(el.id == id){\r\n                        el.done = !el.done\r\n                    }\r\n                    return el\r\n                })\r\n        })\r\n    }\r\n    onMouseDown(event){\r\n        if( event.target.closest('.list-draggind')){\r\n            document.querySelector('.to__do__list').style.userSelect = 'none'\r\n            this.oldTarget = event.target.closest('.list').dataset.target.split('target-list-')[1]\r\n        }\r\n    }\r\n    onMouseUp(event){\r\n        if( event.target.closest('.list') && this.oldTarget){\r\n            document.querySelector('.to__do__list').style.userSelect = ''\r\n            this.newTarget = event.target.closest('.list').dataset.target.split('target-list-')[1]\r\n            this.changeArray();\r\n        }\r\n    }\r\n    changeArray(){\r\n        const arr = this.state.array;\r\n        let i1, i2;\r\n        this.state.array.map((el , idx) => {\r\n            if(el.id == this.newTarget) i1 = idx\r\n            if(el.id == this.oldTarget) i2 = idx\r\n        });\r\n        arr.splice(i1, 1, arr.splice(i2, 1, arr[i1])[0])\r\n        this.setState({\r\n                array: arr\r\n        })\r\n        this.newTarget = undefined\r\n        this.oldTarget = undefined\r\n    }\r\n    render(){\r\n        return( \r\n            <div className=\"to__do__list\" onMouseDown={this.onMouseDown.bind(this)} onMouseUp={this.onMouseUp.bind(this)}>\r\n                <div className=\"to__do__list__adding\">\r\n                    <input value={this.state.value} onChange={(e) => this.change(e)}/> \r\n                    <button className={`btn btn__add ${this.state.value.length == 0 ? 'btn__add__disabled' : ''}`} onClick={this.add.bind(this)}>Добавить</button>\r\n                </div>\r\n                {\r\n                    this.state.array.map(( el, index) => {\r\n                      return  <List key={el.id} index={index+1} elem={el} changeDone={this.changeDone.bind(this, el.id)}>\r\n                                <div className=\"list__btn__action\">\r\n                                    <button className=\"btn btn__delete\" onClick={this.delete.bind(this, el.id)}>Удалить</button>\r\n                                    <button className=\"btn btn__update\" onClick={this.update.bind(this, el.id)}>Редактировать</button>\r\n                                </div>\r\n                            {\r\n                                el.isOpenField ? (\r\n                                    <UpdateList value={this.state.value} \r\n                                        change={this.change.bind(this)}\r\n                                        remove={this.remove.bind(this, el.id)}\r\n                                        save={this.save.bind(this, el.id)}\r\n                                    />\r\n                                ) : ''\r\n                            }\r\n                              </List>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ToDo from './ToDo'\r\n\r\nexport default function Main(){\r\n    return (\r\n        <main>\r\n            <ToDo></ToDo>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nexport default function Footer(){\r\n    return (\r\n        <footer></footer>\r\n    )\r\n}","import React from 'react';\nimport Header from './component/Header'\nimport Main from './component/Main'\nimport Footer from './component/Footer'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Main/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport './style/fonts.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}